package auldfellas;

import java.rmi.registry.Registry;
import java.rmi.registry.LocateRegistry;
import java.rmi.server.UnicastRemoteObject;

import service.core.ClientInfo;
import service.core.Constants;
import service.core.QuotationService;
import service.auldfellas.AFQService;
import org.junit.*;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

public class AuldfellasUnitTest {
	private static Registry registry;

	@BeforeClass
	public static void setup() {
		QuotationService afqService = new AFQService();
		try {
			registry = LocateRegistry.createRegistry(1099);
			QuotationService quotationService = (QuotationService) UnicastRemoteObject.exportObject(afqService, 0);
			registry.bind(Constants.AULD_FELLAS_SERVICE, quotationService);
		} catch (Exception e) {
			System.out.println("Trouble: " + e);
		}
	}

	@Test
	public void connectionTest() throws Exception {
		QuotationService service = (QuotationService) registry.lookup(Constants.AULD_FELLAS_SERVICE);
		assertNotNull(service);
	}
	
	@Test
	public void testGenerateQuotation() throws Exception {
	    // Create a sample client
	    ClientInfo client = new ClientInfo("Rem Collier", ClientInfo.MALE, 44, 5, 3, "COL123/3");

	    // Obtain the QuotationService from the registry
	    QuotationService service = (QuotationService) registry.lookup(Constants.AULD_FELLAS_SERVICE);

	    // Ensure that the generated result is an instance of Quotation
	    assertTrue(service.generateQuotation(client) instanceof Quotation);
	}
	
	 @Test
	    public void generateQuotation1() throws Exception {
	        ClientInfo client = new ClientInfo("Rem Collier", ClientInfo.MALE, 44, 5, 3, "COL123/3");
	        QuotationService service = (QuotationService) registry.lookup(Constants.AULD_FELLAS_SERVICE);
	        assertTrue(service.generateQuotation(client) instanceof Quotation);
	    }
	 
	 @Test
	    public void generateQuotation2() throws Exception {

	        // Look up and retrieve stub of Auldfellas Quotation Service Object
	        QuotationService service = (QuotationService) registry.lookup(Constants.AULD_FELLAS_SERVICE);

	        // Test generation of a quotation from service using test data
	        Quotation generated_quotation = service.generateQuotation(new ClientInfo("Niki Collier", ClientInfo.FEMALE, 43, 0, 5, "PQR254/1"));

	        // Test whether generation has been created and returned
	        assertNotNull(generated_quotation);

}
