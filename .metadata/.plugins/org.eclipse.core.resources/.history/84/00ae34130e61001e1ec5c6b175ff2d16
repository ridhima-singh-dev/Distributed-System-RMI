package service.broker;

import java.rmi.AccessException;
import java.rmi.AlreadyBoundException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.Registry;
import java.util.LinkedList;
import java.util.List;

import service.core.BrokerService;
import service.core.ClientInfo;
import service.core.Quotation;
import service.core.QuotationService;

/**
 * Implementation of the broker service that uses the Service Registry.
 * 
 * @author Rem
 *
 */
public class LocalBrokerService implements BrokerService {
	
	 Registry registry;


	public LocalBrokerService(Registry registry2) {
		// TODO Auto-generated constructor stub
	}


	public List<Quotation> getQuotations(ClientInfo info) {
		List<Quotation> quotations = new LinkedList<Quotation>();
		
		try {
			for (String name : registry.list()) {
				if (name.startsWith("qs-")) {
					QuotationService service = (QuotationService) registry.lookup(name);
					quotations.add(service.generateQuotation(info));
				}
			}
		} catch (AccessException e) {
			e.printStackTrace();
		} catch (RemoteException e) {
			e.printStackTrace();
		} catch (NotBoundException e) {
			e.printStackTrace();
		}

		return quotations;
	}


	@Override
	public void registerService(String name, QuotationService service) throws AlreadyBoundException, RemoteException {
		try {
		this.registry.bind(name, service);
		}catch (Exception e) {
			e.printStackTrace();
		}
		
	}
		 
}
